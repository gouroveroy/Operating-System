diff --git a/Makefile b/Makefile
index f8c820e..2a2edc0 100644
--- a/Makefile
+++ b/Makefile
@@ -32,7 +32,7 @@ OBJS = \
 
 # riscv64-unknown-elf- or riscv64-linux-gnu-
 # perhaps in /opt/riscv/bin
-#TOOLPREFIX = 
+#TOOLPREFIX =
 
 # Try to infer the correct TOOLPREFIX if not set
 ifndef TOOLPREFIX
@@ -81,7 +81,7 @@ endif
 LDFLAGS = -z max-page-size=4096
 
 $K/kernel: $(OBJS) $K/kernel.ld $U/initcode
-	$(LD) $(LDFLAGS) -T $K/kernel.ld -o $K/kernel $(OBJS) 
+	$(LD) $(LDFLAGS) -T $K/kernel.ld -o $K/kernel $(OBJS)
 	$(OBJDUMP) -S $K/kernel > $K/kernel.asm
 	$(OBJDUMP) -t $K/kernel | sed '1,/SYMBOL TABLE/d; s/ .* / /; /^$$/d' > $K/kernel.sym
 
@@ -139,13 +139,14 @@ UPROGS=\
 	$U/_grind\
 	$U/_wc\
 	$U/_zombie\
+	$U/_freqall\
 
 fs.img: mkfs/mkfs README $(UPROGS)
 	mkfs/mkfs fs.img README $(UPROGS)
 
 -include kernel/*.d user/*.d
 
-clean: 
+clean:
 	rm -f *.tex *.dvi *.idx *.aux *.log *.ind *.ilg \
 	*/*.o */*.d */*.asm */*.sym \
 	$U/initcode $U/initcode.out $K/kernel fs.img \
diff --git a/kernel/freq_array.h b/kernel/freq_array.h
new file mode 100644
index 0000000..71bbbbd
--- /dev/null
+++ b/kernel/freq_array.h
@@ -0,0 +1,4 @@
+struct freq_array
+{
+  int counts[128]; // frequency counts for ASCII chars 0 to 127
+};
diff --git a/kernel/syscall.c b/kernel/syscall.c
index ed65409..959bebb 100644
--- a/kernel/syscall.c
+++ b/kernel/syscall.c
@@ -101,6 +101,7 @@ extern uint64 sys_unlink(void);
 extern uint64 sys_link(void);
 extern uint64 sys_mkdir(void);
 extern uint64 sys_close(void);
+extern uint64 sys_countFreq(void);
 
 // An array mapping syscall numbers from syscall.h
 // to the function that handles the system call.
@@ -126,6 +127,7 @@ static uint64 (*syscalls[])(void) = {
 [SYS_link]    sys_link,
 [SYS_mkdir]   sys_mkdir,
 [SYS_close]   sys_close,
+[SYS_countFreq] sys_countFreq,
 };
 
 void
diff --git a/kernel/syscall.h b/kernel/syscall.h
index bc5f356..bdd598b 100644
--- a/kernel/syscall.h
+++ b/kernel/syscall.h
@@ -20,3 +20,4 @@
 #define SYS_link   19
 #define SYS_mkdir  20
 #define SYS_close  21
+#define SYS_countFreq 22
diff --git a/kernel/sysproc.c b/kernel/sysproc.c
index 3b4d5bd..41ef344 100644
--- a/kernel/sysproc.c
+++ b/kernel/sysproc.c
@@ -5,6 +5,7 @@
 #include "memlayout.h"
 #include "spinlock.h"
 #include "proc.h"
+#include "freq_array.h"
 
 uint64
 sys_exit(void)
@@ -91,3 +92,37 @@ sys_uptime(void)
   release(&tickslock);
   return xticks;
 }
+
+uint64
+sys_countFreq(void)
+{
+    uint64 str_addr, a_addr;
+    char buf[512];
+    struct freq_array freq;
+
+    // Fetch the arguments from user space
+    argaddr(0, &str_addr);
+    argaddr(1, &a_addr);
+
+    // Copy the string from user space to kernel space
+    if (copyin(myproc()->pagetable, buf, str_addr, sizeof(buf)) < 0)
+        return -1;
+
+    // Initialize the counts array to 0
+    for (int i = 0; i < 128; i++)
+        freq.counts[i] = 0;
+
+    // Count frequencies of each character
+    for (int i = 0; buf[i] != '\0'; i++) {
+        unsigned char c = buf[i];
+        if (c < 128)
+            freq.counts[c]++;
+    }
+
+    // Copy the result back to user space
+    if (copyout(myproc()->pagetable, a_addr, (char *)&freq, sizeof(freq)) < 0)
+        return -1;
+
+    printf("Target string %s\n", buf);
+    return 0; // Success
+}
diff --git a/user/freqall.c b/user/freqall.c
new file mode 100644
index 0000000..0a03f3e
--- /dev/null
+++ b/user/freqall.c
@@ -0,0 +1,41 @@
+#include "kernel/types.h"
+#include "kernel/stat.h"
+#include "user/user.h"
+#include "kernel/freq_array.h"
+
+int main(int argc, char *argv[])
+{
+  if (argc != 2)
+  {
+    printf("Usage: freqall string\n");
+    exit(0);
+  }
+
+  char buf[512];
+  struct freq_array a;
+
+  // Safely copy argv[1] into buf
+  int i;
+  for (i = 0; i < 511 && argv[1][i]; i++)
+    buf[i] = argv[1][i];
+  buf[i] = '\0';
+
+  if (countFreq(buf, &a) < 0)
+  {
+    printf("countFreq system call failed\n");
+    exit(0);
+  }
+
+  for (int i = 0; i < 128; i++)
+  {
+    if (a.counts[i] > 0)
+    {
+      char ch[2];
+      ch[0] = i;
+      ch[1] = '\0';
+      printf("%s: %d\n", ch, a.counts[i]);
+    }
+  }
+
+  exit(0);
+}
diff --git a/user/user.h b/user/user.h
index f16fe27..dfc6620 100644
--- a/user/user.h
+++ b/user/user.h
@@ -1,4 +1,5 @@
 struct stat;
+struct freq_array;
 
 // system calls
 int fork(void);
@@ -22,6 +23,7 @@ int getpid(void);
 char* sbrk(int);
 int sleep(int);
 int uptime(void);
+int countFreq(char*, struct freq_array*);
 
 // ulib.c
 int stat(const char*, struct stat*);
diff --git a/user/usys.pl b/user/usys.pl
index 01e426e..b33e37a 100755
--- a/user/usys.pl
+++ b/user/usys.pl
@@ -14,7 +14,7 @@ sub entry {
     print " ecall\n";
     print " ret\n";
 }
-	
+
 entry("fork");
 entry("exit");
 entry("wait");
@@ -36,3 +36,4 @@ entry("getpid");
 entry("sbrk");
 entry("sleep");
 entry("uptime");
+entry("countFreq");
